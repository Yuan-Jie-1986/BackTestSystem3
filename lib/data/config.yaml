######## CBNB DB Setting ###########
# 该配置文件的用途是生成MongoDB数据库的结构

db_type: MongoDB
db_name: CBNB

host: localhost
port: 27017
user: yuanjie
pwd: yuanjie
log_path: "E:\\CBNB\\BackTestSystem3\\data_saving.log"

collection:
#  - Information
#  - FuturesMinMD
#  - FuturesMD
  - SpotMD
  - EDB
  - Inventory
#  - ImExport
#  - OperationRate
#  - FuturesOIR
#  - DateDB
#  - DerivDB
#  - TempDB


TempDB:

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: L_PP
    field: feibiao_price_diff
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\bg_db\\feibiao_L_PP_diff.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: L
    field: import_profit_rate
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\bg_db\\LL_import_profit.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: PP
    field: import_profit_rate
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\bg_db\\PP_import_profit.csv"


  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: L_feibiao
    field: feibiao_price_diff
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\bg_db\\LL_feibiao.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: PP_feibiao
    field: feibiao_price_diff
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\bg_db\\PP_feibiao.csv"


  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: ave_corr
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\bg_db\\宏观共振指标.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: monthly
    cmd: macro_inv
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\bg_db\\宏观方向指标.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: monthly
    cmd: chg_macro_inv
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\bg_db\\宏观方向指标变化.csv"


FuturesMinMD:

  -
    source: WIND
    frequency: 1min
    func: getFuturesMinPriceFromWind
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: RB.SHF
    cmd: [RB.SHF, RB2101.SHF, RB2005.SHF, RB2010.SHF]

  - source: WIND
    frequency: 1min
    func: getFuturesMinPriceFromWind
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: HC.SHF
    cmd: [HC.SHF, HC2101.SHF, HC2005.SHF, HC2010.SHF]

  - source: WIND
    frequency: 1min
    func: getFuturesMinPriceFromWind
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: I.DCE
    cmd: [I.DCE, I2101.DCE, I2005.DCE, I2009.DCE]

  - source: WIND
    frequency: 1min
    func: getFuturesMinPriceFromWind
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: J.DCE
    cmd: [J.DCE, J2101.DCE, J2005.DCE, J2009.DCE]

  - source: WIND
    frequency: 1min
    func: getFuturesMinPriceFromWind
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: JM.DCE
    cmd: [JM.DCE, JM2101.DCE, JM2005.DCE, JM2009.DCE]


  - source: WIND
    frequency: 1min
    func: getFuturesMinPriceFromWind
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: L.DCE
    cmd: [L.DCE, L2101.DCE, L2005.DCE, L2009.DCE]

  - source: WIND
    frequency: 1min
    func: getFuturesMinPriceFromWind
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: PP.DCE
    cmd: [PP.DCE, PP2101.DCE, PP2005.DCE, PP2009.DCE]

  - source: WIND
    frequency: 1min
    func: getFuturesMinPriceFromWind
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: BU.SHF
    cmd: [BU.SHF, BU2006.SHF, BU2012.SHF]

  - source: WIND
    frequency: 1min
    func: getFuturesMinPriceFromWind
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: V.DCE
    cmd: [V.DCE, V2101.DCE, V2005.DCE, V2009.DCE]

  - source: WIND
    frequency: 1min
    func: getFuturesMinPriceFromWind
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: TA.CZC
    cmd: [TA.CZC, TA101.CZC, TA005.CZC, TA009.CZC]


  - source: WIND
    frequency: 1min
    func: getFuturesMinPriceFromWind
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: MA.CZC
    cmd: [MA.CZC, MA101.CZC, MA005.CZC, MA009.CZC]


  - source: WIND
    frequency: 1min
    func: getFuturesMinPriceFromWind
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: ZC.CZC
    cmd: [ZC.CZC, ZC101.CZC, ZC005.CZC, ZC009.CZC]

  - source: WIND
    frequency: 1min
    func: getFuturesMinPriceFromWind
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: EG.DCE
    cmd: [EG.DCE, EG2101.DCE, EG2005.DCE, EG2009.DCE]

  - source: WIND
    frequency: 1min
    func: getFuturesMinPriceFromWind
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: RU.SHF
    cmd: [RU.SHF, RU2101.SHF, RU2005.SHF, RU2009.SHF]

  - source: WIND
    frequency: 1min
    func: getFuturesMinPriceFromWind
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: CU.SHF
    cmd: [CU.SHF, CU2006.SHF, CU2007.SHF, CU2008.SHF, CU2004.SHF, CU2005.SHF]

  - source: WIND
    frequency: 1min
    func: getFuturesMinPriceFromWind
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: AL.SHF
    cmd: [AL.SHF, AL2006.SHF, AL2007.SHF, AL2008.SHF, AL2004.SHF, AL2005.SHF]

  - source: WIND
    frequency: 1min
    func: getFuturesMinPriceFromWind
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: ZN.SHF
    cmd: [ZN.SHF, ZN2006.SHF, ZN2007.SHF, ZN2008.SHF, ZN2004.SHF, ZN2005.SHF]

  - source: WIND
    frequency: 1min
    func: getFuturesMinPriceFromWind
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: NI.SHF
    cmd: [NI.SHF, NI2006.SHF, NI2007.SHF, NI2008.SHF, NI2004.SHF, NI2005.SHF]

  - source: WIND
    frequency: 1min
    func: getFuturesMinPriceFromWind
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: AU.SHF
    cmd: [AU.SHF, AU2012.SHF, AU2004.SHF, AU2006.SHF, AU2008.SHF, AU2010.SHF]

  - source: WIND
    frequency: 1min
    func: getFuturesMinPriceFromWind
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: AG.SHF
    cmd: [AG.SHF, AG2009.SHF, AG2004.SHF, AG2005.SHF, AG2006.SHF, AG2007.SHF, AG2008.SHF]

  - source: WIND
    frequency: 1min
    func: getFuturesMinPriceFromWind
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: FU.SHF
    cmd: [FU.SHF, FU2101.SHF, FU2005.SHF, FU2009.SHF]


  - source: WIND
    frequency: 1min
    func: getFuturesMinPriceFromWind
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: FG.CZC
    cmd: [FG.CZC, FG101.CZC, FG005.CZC, FG009.CZC]

  - source: WIND
    frequency: 1min
    func: getFuturesMinPriceFromWind
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: SC.INE
    cmd: [SC.INE, SC2005.INE, SC2006.INE, SC2004.INE]


  -
    source: ThomsonReuters
    func: getPriceFromRT
    frequency: 1min
    interval: minute
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: LCO
    data_type: futures
    cmd: [LCOc1, LCOc2, LCOc3, LCOc4, LCOc5, LCOc6, LCOF3, LCOG3, LCOH3, LCOJ3, LCOK3, LCOM0, LCON0, LCOQ0, LCOU0,
          LCOV0, LCOX0, LCOZ0, LCOF1, LCOG1, LCOH1, LCOJ1, LCOK1, LCOM1, LCON1, LCOQ1, LCOU1, LCOV1, LCOX1, LCOZ1,
          LCOF2, LCOG2, LCOH2, LCOJ2, LCOK2, LCOM2, LCON2, LCOQ2, LCOU2, LCOV2, LCOX2, LCOZ2]

  - source: ThomsonReuters
    func: getPriceFromRT
    frequency: 1min
    interval: minute
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: CL
    data_type: futures
    cmd: [CLc1, CLc2, CLc3, CLc4, CLc5, CLc6, CLF3, CLG3, CLH3, CLJ0, CLK0, CLM0, CLN0, CLQ0, CLU0, CLV0, CLX0, CLZ0,
          CLF1, CLG1, CLH1, CLJ1, CLK1, CLM1, CLN1, CLQ1, CLU1, CLV1, CLX1, CLZ1, CLF2, CLG2, CLH2, CLJ2, CLK2, CLM2,
          CLN2, CLQ2, CLU2, CLV2, CLX2, CLZ2]

  - source: ThomsonReuters
    func: getPriceFromRT
    frequency: 1min
    interval: minute
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: GC
    data_type: futures
    cmd: [GCc1, GCc2, GCc3, GCc4, GCc5, GCc6, GCF2, GCG2, GCH0, GCJ0, GCK0, GCM0, GCN0, GCQ0, GCU0, GCV0, GCX0, GCZ0,
          GCF1, GCG1, GCH1, GCJ1, GCK1, GCM1, GCN1, GCQ1, GCU1, GCV1, GCX1, GCZ1]

  - source: ThomsonReuters
    func: getPriceFromRT
    frequency: 1min
    interval: minute
    save_mode: CSV
    save_path: "E:\\CBNB\\BackTestSystem3\\BT_DATA\\RAW_DATA\\"
    category: SI
    data_type: futures
    cmd: [SIc1, SIc2, SIc3, SIc4, SIc5, SIc6, SIF2, SIG2, SIH0, SIJ0, SIK0, SIM0, SIN0, SIQ0, SIU0, SIV0, SIX0, SIZ0,
          SIF1, SIG1, SIH1, SIJ1, SIK1, SIM1, SIN1, SIQ1, SIU1, SIV1, SIX1, SIZ1]

FuturesMD:
  -
    source: WIND
    frequency: daily
    func: getFutureGroupPriceFromWind
    alldaytrade: 0
    cmd:
      - L.DCE
      - PP.DCE
      - I.DCE
      - J.DCE
      - JM.DCE
      - M.DCE
      - C.DCE
      - RB.SHF
      - BU.SHF
      - RU.SHF
      - NI.SHF
      - HC.SHF
      - TA.CZC
      - MA.CZC
      - AP.CZC
      - ZC.CZC
      - SR.CZC
      - RM.CZC
      - SC.INE
      - EG.DCE
      - SP.SHF
      - FG.CZC
      - V.DCE
      - CU.SHF
      - AL.SHF
      - AG.SHF
      - AU.SHF
      - FU.SHF
      - IF.CFE
      - IC.CFE
      - IH.CFE
      - ZN.SHF
      - PB.SHF
      - SN.SHF
      - EB.DCE
      - Y.DCE
      - P.DCE
      - CF.CZC
      - OI.CZC

  -
    source: WIND
    frequency: daily
    func: getFutureGroupPriceFromWind
    alldaytrade: 1
    cmd: [B.IPE, NG.NYM, GC.CMX, SI.CMX, CA.LME, AH.LME, ZS.LME, PB.LME, NI.LME, SN.LME]  # LB.CME

  -
    source: ThomsonReuters
    func: getPriceFromRT
    frequency: daily
    data_type: futures
    save_mode: MongoDB
    interval: daily
    cmd: [LCOc1, LCOc2, CLc1, CLc2, RBc1, RBc2, HOc1, HOc2, LGOc1, LGOc2, NGc1, NGc2, GCc1, SIc1, STFc1, JRUc1, SLPFc1]

  - source: ThomsonReuters
    func: getPriceFromRT
    frequency: daily
    data_type: swap
    save_mode: MongoDB
    interval: daily
    cmd: [FO380SGSWMc1, FO180SGSWMc1, EBOBNWEMc1, EBOBNWEMc2, NACFRJPSWMc1, NACFRJPSWMc2, GO10SGSWMc1, GO10SGSWMc2,
    MOG92SGMc1, MOG92SGMc2]

SpotMD:

  -
    source: WIND
    func: getEDBFromWind
    frequency: daily
    unit: 元/吨
    cmd: S0033227
    edb_name: "价格:螺纹钢:HRB400 20mm:上海"

  -
    source: WIND
    func: getEDBFromWind
    frequency: daily
    unit: 元/吨
    cmd: S5704863
    edb_name: "价格:热轧板卷:Q235B:4.75mm:杭州"

  -
    source: WIND
    func: getEDBFromWind
    frequency: daily
    unit: 元/吨
    cmd: S5118197
    edb_name: "天津港:平仓价(含税):一级冶金焦(A<12.5%,<0.65%S,CSR>65%,Mt8%):山西产"

  -
    source: WIND
    func: getEDBFromWind
    frequency: daily
    unit: 元/吨
    cmd: S5118429
    edb_name: "天津港:平仓价(含税):准一级冶金焦(A<12.5%,<0.7%S,CSR>60%,Mt8%)"


  -
    source: WIND
    func: getEDBFromWind
    frequency: daily
    unit: 元/湿吨
    cmd: S0174655
    edb_name: "车板价:青岛港:澳大利亚:PB粉矿:61.5%"

  -
    source: WIND
    func: getEDBFromWind
    frequency: daily
    unit: 元/吨
    cmd: S5112223
    edb_name: "天津港:库提价(含税):主焦煤(A<8%,V28%,0.8%S,G95,Y20mm):澳大利亚产"

  -
    source: WIND
    func: getEDBFromWind
    frequency: daily
    unit: 元/吨
    cmd: S5101377
    edb_name: "秦皇岛港:平仓价:动力末煤(Q5500):山西产"

  -
    source: WIND
    func: getEDBFromWind
    frequency: daily
    unit: 元/吨
    cmd: S5016816
    edb_name: "市场价:天然橡胶:云南国营全乳胶(SCRWF):上海"


  -
    source: WIND
    func: getEDBFromWind
    frequency: daily
    unit: 美元/吨
    cmd: S5400545
    edb_name: "现货价(中间价):纯苯:FOB韩国"


  -
    source: ThomsonReuters
    func: getPriceFromRT
    frequency: daily
    unit: 美元/桶
    data_type: spot
    cmd: [WTM-, WTC-, DUB-1M, NAF-SIN]

  -
    source: ThomsonReuters
    func: getPriceFromRT
    frequency: daily
    unit: 美元/吨
    data_type: spot
    cmd: [FO380-SIN, PRO-TYO, BUT-TYO]

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: LL神华煤化工价格
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\supplement_db\\LL_SHENHUA.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: LL华东
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\supplement_db\\LL_HUADONG.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: 甲醇华东（江苏地区）
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\supplement_db\\MA.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: PP华东现货价
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\supplement_db\\PP.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: TA内盘人民币价
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\supplement_db\\PTA.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: 现货（常州sg-5低端价）
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\supplement_db\\PVC.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: 国产重交-山东
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\supplement_db\\沥青.csv"


  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: 泰国STR20混合胶
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\supplement_db\\RU.csv"


  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: MEG
    area: 华东主港
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\supplement_db\\MEG.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: PX
    area: CFR中国
    unit: 美元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\supplement_db\\PX.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: 华北融指1线性（天津9085）
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\supplement_db\\RONGZHI_HUABEI.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: 华北重包
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\supplement_db\\ZHONGBAO_HUABEI.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: 地膜
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\supplement_db\\DIMO.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: 双防膜
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\supplement_db\\SHUANGFANGMO.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: 缠绕膜
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\supplement_db\\CHANRAOMO.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: BOPP膜
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\supplement_db\\BOPPMO.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: "华北电石法 SG5"
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\supplement_db\\SG5_HUABEI.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: "电石华北 山东"
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\supplement_db\\DIANSHI_SD.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: "液氯华北"
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\supplement_db\\YELV_HUABEI.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: "华北电价"
    unit: 元/千千瓦时
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\supplement_db\\DIANJIA_HUABEI.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: "POY150D/48F"
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\supplement_db\\POY.csv"

#  -
#    source: ManualInput
#    func: getDataFromCSV
#    frequency: daily
#    cmd: BZ
#    area: FOB韩国
#    unit: 美元/吨
#    field: price
#    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\supplement_db\\BZ.csv"
#
#  -
#    source: ManualInput
#    func: getDataFromCSV
#    frequency: daily
#    cmd: SM
#    unit: 元/吨
#    field: price
#    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\supplement_db\\SM.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: "杯胶（泰铢/kg)"
    unit: 泰铢/千克
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\supplement_db\\BEIJIAO.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: SM
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\supplement_db\\SM.csv"

EDB:
  - func: getEDBFromWind
    source: WIND
    cmd: M0041653
    edb_name: "银行间质押式回购加权利率:7天"
    unit: "%"
    frequency: Daily
  -
    func: getEDBFromWind
    source: WIND
    cmd: M0067855
    edb_name: "即期汇率:美元兑人民币"
    unit: null
    frequency: Daily
  -
    func: getEDBFromWind
    source: WIND
    cmd: S5016928
    edb_name: "期货结算价(活跃合约):新加坡橡胶:TSR20(FOB)"
    unit: 美分/公斤
    frequency: Daily

  -
    func: getEDBFromWind
    source: WIND
    cmd: M0067858
    edb_name: "即期汇率:100日元兑人民币"
    unit: null
    frequency: Daily

  - func: getEDBFromWind
    source: WIND
    cmd: G0522656
    edb_name: "泰国:即期汇率:美元兑泰铢:卖出价"
    unit: null
    frequency: Daily

  - func: getEDBFromWind
    source: WIND
    cmd: M0330260
    edb_name: "中间价:人民币兑泰铢"
    unit: null
    frequency: Daily

  - source: WIND
    func: getWSDFromWind
    frequency: daily
    cmd: [USDCNH.FX]
    alldaytrade: 1
    tradingcalendar: HKEX
    fields: [OPEN, CLOSE, HIGH, LOW]

  - source: ThomsonReuters
    func: getPriceFromRT
    frequency: daily
    data_type: foreign exchange
    cmd: [CNY=, CNH=]

DateDB:
  -
    func: getDateSeries
    cmd: [SHSE, NYMEX, TSE]
    frequency: Daily
    source: WIND

Information:
  -
    func: getFuturesInfoFromWind
    source: WIND
    cmd:
      - L.DCE
      - PP.DCE
      - I.DCE
      - J.DCE
      - JM.DCE
      - M.DCE
      - C.DCE
      - RB.SHF
      - BU.SHF
      - RU.SHF
      - NI.SHF
      - HC.SHF
      - TA.CZC
      - MA.CZC
      - AP.CZC
      - ZC.CZC
      - SR.CZC
      - RM.CZC
      - SC.INE
      - B.IPE
      - EG.DCE
      - SP.SHF
      - NG.NYM
      - FG.CZC
      - V.DCE
      - CU.SHF
      - AL.SHF
      - AG.SHF
      - AU.SHF
      - FU.SHF
      - IF.CFE
      - IH.CFE
      - IC.CFE
      - GC.CMX
      - SI.CMX
      - ZN.SHF
      - PB.SHF
      - SN.SHF
      - CA.LME
      - AH.LME
      - ZS.LME
      - PB.LME
      - NI.LME
      - SN.LME
      - EB.DCE
      - Y.DCE
      - P.DCE
      - CF.CZC
      - OI.CZC

ICEPrice:
  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: MOPJ
    unit: 美元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem\\lib\\data\\supplement_db\\MOPJ.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: MOGAS
    unit: 美元/桶
    field: price
    path: "E:\\CBNB\\BackTestSystem\\lib\\data\\supplement_db\\MOGAS.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: LPG
    unit: 美元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem\\lib\\data\\supplement_db\\LPG.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: Gasoil10
    unit: 美元/桶
    field: price
    path: "E:\\CBNB\\BackTestSystem\\lib\\data\\supplement_db\\Gasoil10.csv"

DerivDB:
  -
    func: combineMainContract
    cmd: [TA.CZC, L.DCE, PP.DCE, MA.CZC, J.DCE, JM.DCE, V.DCE, I.DCE, ZC.CZC]
    method: LastMonthEnd
    month_list: [1, 5, 9]

  -
    func: combineMainContract
    cmd: [RB.SHF, HC.SHF]
    method: LastMonthEnd
    month_list: [1, 5, 10]

  -
    func: combineMainContract
    cmd: [BU.SHF]
    method: LastMonthEnd
    month_list: [6, 12]

FuturesOIR:
  -
    func: getFuturesOIRFromWind
    source: WIND
    cmd:
      - L.DCE

Inventory:

  -
    source: Wind
    func: getEDBFromWind
    frequency: weekly
    unit: 万吨
    cmd: S5475752
    edb_name: "港口库存:苯乙烯:华东"

  -
    source: Wind
    func: getEDBFromWind
    frequency: weekly
    unit: 吨
    cmd: S5471265
    edb_name: "社会库存:PVC"

  -
    source: Wind
    func: getEDBFromWind
    frequency: weekly
    unit: 万吨
    cmd: S5713191
    edb_name: "全国主要港口:铁矿石库存:总计(45港口)"

  -
    source: Wind
    func: getEDBFromWind
    frequency: weekly
    unit: 万吨
    cmd: S5120058
    edb_name: "焦炭库存:天津港"

  -
    source: Wind
    func: getEDBFromWind
    frequency: weekly
    unit: 万吨
    cmd: S5116629
    edb_name: "焦炭库存:连云港"

  -
    source: Wind
    func: getEDBFromWind
    frequency: weekly
    unit: 万吨
    cmd: S5116630
    edb_name: "焦炭库存:日照港"

  -
    source: Wind
    func: getEDBFromWind
    frequency: weekly
    unit: 万吨
    cmd: S5136709
    edb_name: "焦炭库存:青岛港"

  -
    source: Wind
    func: getEDBFromWind
    frequency: weekly
    unit: 万吨
    cmd: S5125686
    edb_name: "炼焦煤库存:六港口合计"

  -
    source: Wind
    func: getEDBFromWind
    frequency: weekly
    unit: 万吨
    cmd: S0069694
    edb_name: "煤炭库存:秦皇岛港:周"

  -
    source: Wind
    func: getEDBFromWind
    frequency: daily
    unit: 万吨
    cmd: S5116621
    edb_name: "煤炭库存:6大发电集团:合计"

  -
    source: Wind
    func: getEDBFromWind
    frequency: daily
    unit: 万吨
    cmd: S5118163
    edb_name: "煤炭库存:曹妃甸港"

  -
    source: Wind
    func: getEDBFromWind
    frequency: daily
    unit: 万吨
    cmd: S5103725
    edb_name: "煤炭库存:秦皇岛港"

  -
    source: Wind
    func: getEDBFromWind
    frequency: weekly
    unit: 吨
    cmd: S0049508
    edb_name: "库存小计:天然橡胶:总计"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: weekly
    cmd: HC
    area: 全国33个城市
    unit: 万吨
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\HC.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: weekly
    cmd: LL
    area: LL社会库存
    unit: 万吨
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\LL.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: weekly
    cmd: LL
    area: LL石化库存
    unit: 万吨
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\LL石化库存.csv"



  -
    source: ManualInput
    func: getDataFromCSV
    frequency: weekly
    cmd: MA
    area: "江苏+宁波+广东+福建"
    unit: 万吨
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\MA.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: weekly
    cmd: MEG
    area: MEG港口库存
    unit: 万吨
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\MEG.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: weekly
    cmd: PP
    area: PP社会库存
    unit: 万吨
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\PP.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: weekly
    cmd: PP
    area: PP石化库存
    unit: 万吨
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\PP石化库存.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: weekly
    cmd: PTA
    area: "PTA总库存（忠朴）"
    unit: 万吨
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\PTA.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: weekly
    cmd: RB
    area: 35城市
    unit: 万吨
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\RB.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: weekly
    cmd: BU
    area: 山东炼厂库存率
    unit: "%"
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\BU.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: weekly
    cmd: RU
    area: "区外库存指数（单位：2015定基1）"
    unit: null
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\橡胶区外库存.csv"


  -
    source: ThomsonReuters
    func: getPriceFromRT
    frequency: daily
    unit: 百万桶
    data_type: spot
    cmd: [STKRS-SIN]


  -
    source: ManualInput
    func: getDataFromCSV
    frequency: weekly
    cmd: BZ
    area: 华东码头库存
    unit: 万吨
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\BZ.csv"


  -
    source: ManualInput
    func: getDataFromCSV
    frequency: weekly
    cmd: SM
    area: 华东码头库存
    unit: 万吨
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\SM.csv"

  -
    source: ManualInput
    func: getDataFromCSV
    frequency: weekly
    cmd: PX
    area: 社会库存
    unit: 万吨
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\PX.csv"


  - source: ManualInput
    func: getDataFromCSV
    frequency: weekly
    cmd: POY
    area: 聚酯库存
    unit: 万吨
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\POY.csv"


  - source: ManualInput
    func: getDataFromCSV
    frequency: weekly
    cmd: J
    area: 港口库存
    unit: 万吨
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\焦炭港口库存.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: weekly
    cmd: J
    area: 钢厂库存
    unit: 万吨
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\焦炭钢厂库存.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: weekly
    cmd: I
    area: 钢厂库存
    unit: 万吨
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\铁矿钢厂库存.csv"


  - source: ManualInput
    func: getDataFromCSV
    frequency: weekly
    cmd: RB
    area: 钢厂库存
    unit: 万吨
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\螺纹钢厂库存.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: weekly
    cmd: RU
    area: 保税区内库存
    unit: 万吨
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\橡胶保税区内库存.csv"


  - source: ManualInput
    func: getDataFromCSV
    frequency: weekly
    cmd: RU
    area: 保税区外库存
    unit: 万吨
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\橡胶保税区外库存.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: weekly
    cmd: J
    area: 焦化厂库存
    unit: 万吨
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\焦炭焦化厂库存.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: weekly
    cmd: MA
    area: 内地库存
    unit: 万吨
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\甲醇内地库存.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: weekly
    cmd: HC
    area: 钢厂库存
    unit: 万吨
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\热卷钢厂库存.csv"


  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: LL
    area: 石化总库存
    unit: 万吨
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\LL石化总库存.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: PP
    area: 石化总库存
    unit: 万吨
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\PP石化总库存.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: weekly
    cmd: PVC
    area: 总库存
    unit: 万吨
    field: inventory
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\inventory_db\\PVC卓创.csv"

ImExport:
  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: sm cfr
    unit: 美元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\sm_cfr.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: sm rmb
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\sm_rmb.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: pp cfr
    unit: 美元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\pp_cfr.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: pp rmb
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\pp_rmb.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: meg cfr
    unit: 美元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\meg_cfr.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: meg rmb
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\meg_rmb.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: ma cfr
    unit: 美元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\ma_cfr.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: ma rmb
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\ma_rmb.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: lpg cfr
    unit: 美元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\lpg_cfr.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: lpg rmb
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\lpg_rmb.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: ll cfr
    unit: 美元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\ll_cfr.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: ll rmb
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\ll_rmb.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: ld cfr
    unit: 美元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\ld_cfr.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: ld rmb
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\ld_rmb.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: bz cfr
    unit: 美元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\bz_cfr.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: bz rmb
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\bz_rmb.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: zc cfr
    unit: 美元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\zc_cfr.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: zc rmb
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\zc_rmb.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: YDF cfr
    unit: 美元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\YDF_cfr.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: YDF rmb
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\YDF_rmb.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: ru cfr
    unit: 美元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\ru_cfr.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: ru rmb
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\ru_rmb.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: px cfr
    unit: 美元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\px_cfr.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: px rmb
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\px_rmb.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: PBF cfr
    unit: 美元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\PBF_cfr.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: PBF rmb
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\PBF_rmb.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: NHGF cfr
    unit: 美元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\NHGF_cfr.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: NHGF rmb
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\NHGF_rmb.csv"


  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: MACF cfr
    unit: 美元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\MACF_cfr.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: MACF rmb
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\MACF_rmb.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: JMBF cfr
    unit: 美元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\JMBF_cfr.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: JMBF rmb
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\JMBF_rmb.csv"


  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: hd cfr
    unit: 美元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\hd_cfr.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: hd rmb
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\hd_rmb.csv"


  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: bu cfr
    unit: 美元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\bu_cfr.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: bu rmb
    unit: 元/吨
    field: price
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\imexport_db\\bu_rmb.csv"


OperationRate:
  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: MEG国内开工率
    unit: '%'
    field: operation_rate
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\operation_rate\\MEG_DOMESTIC.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: TA国内开工率
    unit: '%'
    field: operation_rate
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\operation_rate\\TA_DOMESTIC.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: PE总开工率
    unit: '%'
    field: operation_rate
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\operation_rate\\PE_TOTAL.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: PP总开工率
    unit: '%'
    field: operation_rate
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\operation_rate\\PP_TOTAL.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: MA全国开工率
    unit: '%'
    field: operation_rate
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\operation_rate\\MA_DOMESTIC.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: MA西北开工率
    unit: '%'
    field: operation_rate
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\operation_rate\\MA_NORTHWEST.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: PVC整体开工率
    unit: '%'
    field: operation_rate
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\operation_rate\\PVC_TOTAL.csv"

  - source: ManualInput
    func: getDataFromCSV
    frequency: daily
    cmd: BU总开工率
    unit: '%'
    field: operation_rate
    path: "E:\\CBNB\\BackTestSystem3\\lib\\data\\operation_rate\\BU_TOTAL.csv"

  - source: Wind
    func: getEDBFromWind
    frequency: weekly
    unit: '%'
    cmd: S5708175
    edb_name: "高炉开工率:全国"

  - source: Wind
    func: getEDBFromWind
    frequency: weekly
    unit: '%'
    cmd: S5133408
    edb_name: "焦炉生产率:国内独立焦化厂(100家):合计"




